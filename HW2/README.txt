This is the explaining document for HW2, all work based on the livesql (https://livesql.oracle.com/).

==================================================================================================================================================================================================
Q1 is creating the table needed and other processes on them. I will explain the work i've done, and I also have written comments in the code to help understanding if needed.

[018-027] For table creation, I added two additional attributes to the notification table, 'source_ID' and 'source_type', no influence on the function, just for checking during design.
[067-077] I created 2 more tables, one is 'MeetingAttendees' recording every meeting's attendees, I think it will be easier to do the contact tracing.
[079-085] The other one is 'ToTest', which is important acting as a staging table for table 'Test', storing employees who need to take the test, and after taking test, the data will be deleted.

[093-188] Afterward comes the data population, here I generated 25 employees and 15 meetings randomly by Python code (will be submitted as well).
[191-205] To avoid the situation of one employee being in several meetings at the same time, adjustments to the 'MeetingAttendees' table were made manually.
[221-244] Insert the populated 'Scan' & 'Symptom' data, generated by Python as well.
[246-294] Add employees with high body temperature (type 0) and self-reported symptom (type 1) into 'ToTest', here I assume the employees with symptoms take test on 23:00 that day.
		  Because the real data would not be populated this way, I use DBMS_RANDOM.VALUE to determain the location (for self-report employees) and test_result.

[299-307] Add positive employees into table 'Case', they have 1% possibility being 'deceased', otherwise 'left the company', later in the 'HealthStatus' part they will report their condition.	  
[309-341] Positive test results will lead to 'Notification' part, I divided it into 4 kinds based on source_type:
		  'same office' and 'same meeting' are mandatory while 'same office floor' and 'same meeting room/floor' are optional.
          Notice that the positive employees would not recieve further notifications. 
		  
[348-398] The contact tracing part, from my own skills, I cannot write a perfect loop with SQL now, so this is the process of one-time tracing, which only find once.
	      And from my personal view, I think the conditions given for meeting have problem that the meetings have no date attribute, which is strange and being a matter on realization of tracing.
		  Now take a look at the tracing itself, from the 'Notification' table, 'mandatory' and part of 'optional' employees will take tests on 23:00 the same day they are noticed.
		  For them who are noticed multiple times, they only take test once. Then add the information into 'Test' table, if positive add into 'Case'.
		  
		  <If there is no new positive employee, the tracing stops, otherwise the loop will continue.> This is how the process should be.

[400-409] Insert into 'HealthStatus', here I use DBMS_RANDOM.VALUE again, which should be reported by positive employees, of course, if 'deceased', no need to report. (R.I.P)
[413-422] Since the HealthStatus will be reported everyday, if an employee feel good today, and it has been over 14 days, he/she can get back to work and no need to report anymore
		  Therefore the resolution in 'Case' will be updated as 'back to work'.
==================================================================================================================================================================================================
Q2 
This is for finding the most-reported symptom amoung all, here I use GROUP BY function to divide different symptoms.
==================================================================================================================================================================================================
Q3 
This is similar to Q2, join 'Test' and find data with test_result = 'positive'.
==================================================================================================================================================================================================
Q4 
This question requires several stats within a certain period of time, select with condition constraint on date will be fine, for example
==================================================================================================================================================================================================
Q5
Here I design a program finding the relationship between amount of meeting attended and amount of employees in single office for positive testers.
Can provide straightforward information for the company leader, to judge if it is neccessary to let all employees work remotely from home in order to minimize exposure and infections.
I think this is useful and involves table division.
==================================================================================================================================================================================================
For the usage of Python scripts, I think it's avoidable in this assignment, for in the beginning I was not that familiar with SQL commands, and decided to use Python on data population.
And throughout the process of completing this assignment, I've learnt a lot about SQL from w3school and CSDN (which is a very popular programmer's forum/blog in China) thank to them!